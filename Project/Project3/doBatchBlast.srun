#!/bin/bash
#SBATCH --partition=hort503-01-s18        ### Partition (like a queue in PBS)
#SBATCH --account=hort503-01-s18
#SBATCH --job-name=project03     ### Job Name
#SBATCH --output=doBatchBlast.out         ### File in which to store job output
#SBATCH --error=doBatchBlast.err          ### File in which to store job error messages
#SBATCH --time=3-00:00:00       ### Wall clock time limit in Days-HH:MM:SS
#SBATCH --nodes=5               ### Node count required for the job
#SBATCH --ntasks-per-node=2     ### Nuber of tasks to be launched per Node

# Load module
  module add blast
# Get arguments
  echo "Getting arguments ..."
  fileName=$1
  dbName=$2
# For split files
  if [ -d splitFSA ]
  then
    rm -r splitFSA
    rm -r splitOut
  fi
  mkdir splitFSA
  mkdir splitOut
# Split given file into pieces
  echo "Splitting files... "
  awk 'BEGIN{RS=">"}
  {
    print ">" $0 >> "splitFSA/seq_" (int(NR/5000) + 1) ".fasta"
  }' $fileName
# Do blast on these files
  echo "Running BLAST..."
  files=$(ls splitFSA | sed 's/.fasta//g')
  for f in $files
  do
    echo "Processing $f file..."
    blastp -query "splitFSA/${f}.fasta" -db $dbName -outfmt \
     "6 qacc sacc stitle pident length mismatch gapopen qstart qend sstart send evalue bitscore" \
     -out "splitOut/${f}.out"
  done
# Combine reulsts of files into one
  echo "Combining results..."
  rm blast.out
  cat splitOut/seq_*.out >> blast.out
# Summarize result
  echo "Summarizing results..."
  awk 'BEGIN{FS="\t"}
  {
    array[$3]++
  }
  END{for(i in array) print i,"\t",array[i]}' blast.out | \
  sort -t$'\t' -nrk2 > summary.out

echo "All procedures done!"



sbatch doBatchBlast.srun subF.txt /data/hort503_01_s18/example-data/swissprot
sbatch doBatchBlast.srun all.pep /data/hort503_01_s18/example-data/swissprot
